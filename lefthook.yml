pre-commit:
  parallel: true
  commands:
    lint:
      glob: '*.{js,jsx,ts,tsx}'
      run: npx eslint {staged_files} --ext .js,.jsx,.ts,.tsx --max-warnings 0 --fix
      stage_fixed: true
    format:
      glob: '*.{js,jsx,ts,tsx,json,md,css,scss}'
      run: npx prettier --write {staged_files}
      stage_fixed: true
    tsc:
      glob: 'src/**/*.{ts,tsx}'
      run: npm run tsc

pre-push:
  commands:
    test:
      run: npm test
    build:
      run: npm run build

commit-msg:
  commands:
    commitlint:
      run: |
        # Simple commit message validation
        if ! grep -qE "^(feat|fix|docs|style|refactor|test|chore)(\(.+\))?: .{1,50}" {1}; then
          echo "❌ Invalid commit message format!"
          echo "Expected: <type>(<scope>): <description>"
          echo "Types: feat, fix, docs, style, refactor, test, chore"
          echo "Example: feat(auth): add login functionality"
          exit 1
        fi
        echo "✅ Commit message format is valid"
